model Company {
  id                  String          @id @default(cuid())
  name                String
  users               User[]
  GeneratedDocs       GeneratedDocs[]
  templates           Template[]
  jobListings         JobListing[]
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  allowedDocsPerUsers Int             @default(5)
  allowedTemplates    Int             @default(2)
  createdTemplates    Int             @default(0)

  @@map("companies")
}

model Template {
  id              String   @id @default(cuid())
  name            String
  templateContent String   @db.Text
  company         Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId       String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("templates")
}

model JobListing {
  id           String           @id @default(cuid())
  title        String
  description  String           @db.Text
  skills       String[]
  location     String?
  salaryRange  String?
  companyId    String?
  company      Company?         @relation(fields: [companyId], references: [id])
  status       JobStatus        @default(OPEN)
  createdBy    String
  creator      User             @relation(fields: [createdBy], references: [id])
  applications JobApplication[]
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  customStatus String?

  @@map("job_listings")
}

enum JobStatus {
  OPEN
  FILLED
  CLOSED
  EXTERNAL_FILL
  CUSTOM
}

enum ApplicationStatus {
  SUBMITTED
  REVIEWING
  INTERVIEW
  OFFER
  HIRED
  REJECTED
  WITHDRAWN
}
